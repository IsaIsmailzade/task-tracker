services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"
    networks:
      - spring-net
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env

  backend-service:
    image: isaismailzade/backend-service:latest
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - spring-net
    env_file:
      - .env

  email-sender-service:
    image: isaismailzade/email-sender-service:latest
    networks:
      - spring-net
    env_file:
      - .env

  scheduler-service:
    image: isaismailzade/scheduler-service:latest
    depends_on:
      db:
        condition: service_healthy
    networks:
      - spring-net
    env_file:
      - .env

  kafka:
    image: apache/kafka:3.9.1
    hostname: kafka
    ports:
      - "9092:9092"
    networks:
      - spring-net
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT, CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092, PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker, controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092, CONTROLLER://kafka:29093, PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      CLUSTER_ID: 4Ocr70XGQeyfW7fVMsOUWA
    env_file:
      - .env

networks:
  spring-net:
